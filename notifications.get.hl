
/*
 * Template for HTTP GET CRUD requests.
 * This file was automatically generated using Magic's CRUDifier.
 */
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   notifications.username.eq:string
   notifications.type.eq:string
   notifications.content.like:string
   notifications.handled.eq:bool
.description:Returns items from your notifications table in your [generic|notifications] database according to the specified arguments
.type:crud-read

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root, admin, guest

// Defaulting sorting order to created and descending unless explicitly overridden.
.sort
   order:x:@.arguments/*/order
   direction:x:@.arguments/*/direction
unwrap:x:-/*
if
   and
      null:x:@.sort/*/order
      null:x:@.sort/*/direction
   .lambda
      set-value:x:@.sort/*/order
         .:created
      set-value:x:@.sort/*/direction
         .:desc

// Ensuring we're able to retrieve only notifications belonging to currently authenticated user.
auth.ticket.get

// Opening up our database connection.
data.connect:[generic|notifications]

   // Parametrising our read invocation.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:notifications
      columns
         notifications.id
         notifications.username
         notifications.type
         notifications.content
         notifications.handled
         notifications.created
      where
         and
            username.eq:x:@auth.ticket.get
      order:x:@.sort/*/order
      direction:x:@.sort/*/direction

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
